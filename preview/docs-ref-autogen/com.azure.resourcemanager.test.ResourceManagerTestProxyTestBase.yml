### YamlMime:JavaType
uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase"
fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase"
name: "ResourceManagerTestProxyTestBase"
nameWithType: "ResourceManagerTestProxyTestBase"
summary: "Test base for resource manager SDK."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.test.TestBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.test.TestProxyTestBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.test.TestBase?alt=com.azure.core.test.TestBase&text=TestBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.test.TestBase.<T,U>setPlaybackPollerFluxPollInterval(com.azure.core.util.polling.PollerFlux<T,U>)?alt=com.azure.core.test.TestBase.<T,U>setPlaybackPollerFluxPollInterval&text=<T,U>setPlaybackPollerFluxPollInterval\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.<T,U>setPlaybackSyncPollerPollInterval(com.azure.core.util.polling.SyncPoller<T,U>)?alt=com.azure.core.test.TestBase.<T,U>setPlaybackSyncPollerPollInterval&text=<T,U>setPlaybackSyncPollerPollInterval\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.afterTest()?alt=com.azure.core.test.TestBase.afterTest&text=afterTest\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.beforeTest()?alt=com.azure.core.test.TestBase.beforeTest&text=beforeTest\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.getHttpClientOrUsePlayback(com.azure.core.http.HttpClient)?alt=com.azure.core.test.TestBase.getHttpClientOrUsePlayback&text=getHttpClientOrUsePlayback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.getHttpClients()?alt=com.azure.core.test.TestBase.getHttpClients&text=getHttpClients\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.getTestClassPath()?alt=com.azure.core.test.TestBase.getTestClassPath&text=getTestClassPath\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.getTestMode()?alt=com.azure.core.test.TestBase.getTestMode&text=getTestMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.getTestName()?alt=com.azure.core.test.TestBase.getTestName&text=getTestName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.isTestProxyEnabled()?alt=com.azure.core.test.TestBase.isTestProxyEnabled&text=isTestProxyEnabled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.setTestProxyEnabled()?alt=com.azure.core.test.TestBase.setTestProxyEnabled&text=setTestProxyEnabled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.setupClass()?alt=com.azure.core.test.TestBase.setupClass&text=setupClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.setupTest(com.azure.core.test.TestContextManager)?alt=com.azure.core.test.TestBase.setupTest&text=setupTest\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.shouldClientBeTested(com.azure.core.http.HttpClient)?alt=com.azure.core.test.TestBase.shouldClientBeTested&text=shouldClientBeTested\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.sleepIfRunningAgainstService(long)?alt=com.azure.core.test.TestBase.sleepIfRunningAgainstService&text=sleepIfRunningAgainstService\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.test.TestBase.teardownTest()?alt=com.azure.core.test.TestBase.teardownTest&text=teardownTest\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.core.test.TestProxyTestBase?alt=com.azure.core.test.TestProxyTestBase&text=TestProxyTestBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.test.TestProxyTestBase.setupTestProxy()?alt=com.azure.core.test.TestProxyTestBase.setupTestProxy&text=setupTestProxy\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public abstract class **ResourceManagerTestProxyTestBase**</br> extends <xref href=\"com.azure.core.test.TestProxyTestBase?alt=com.azure.core.test.TestProxyTestBase&text=TestProxyTestBase\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.ResourceManagerTestProxyTestBase()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.ResourceManagerTestProxyTestBase()"
  name: "ResourceManagerTestProxyTestBase()"
  nameWithType: "ResourceManagerTestProxyTestBase.ResourceManagerTestProxyTestBase()"
  summary: "Initializes Resource<wbr>Manager<wbr>Test<wbr>Proxy<wbr>Test<wbr>Base class."
  modifiers:
  - "protected"
  syntax: "protected ResourceManagerTestProxyTestBase()"
  desc: "Initializes ResourceManagerTestProxyTestBase class."
fields:
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.REDACTED_VALUE"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.REDACTED_VALUE"
  name: "REDACTED_VALUE"
  nameWithType: "ResourceManagerTestProxyTestBase.REDACTED_VALUE"
  summary: "Redacted value."
  modifiers:
  - "protected"
  - "static"
  - "final"
  field:
    value: "REDACTED"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "protected static final String REDACTED_VALUE"
  desc: "Redacted value."
methods:
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.addSanitizers(com.azure.core.test.models.TestProxySanitizer...)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.addSanitizers(TestProxySanitizer[] sanitizers)"
  name: "addSanitizers(TestProxySanitizer[] sanitizers)"
  nameWithType: "ResourceManagerTestProxyTestBase.addSanitizers(TestProxySanitizer[] sanitizers)"
  summary: "Adds test proxy sanitizers."
  modifiers:
  - "protected"
  parameters:
  - description: "the test proxy sanitizers."
    name: "sanitizers"
    type: "<xref href=\"com.azure.core.test.models.TestProxySanitizer?alt=com.azure.core.test.models.TestProxySanitizer&text=TestProxySanitizer\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "protected void addSanitizers(TestProxySanitizer[] sanitizers)"
  desc: "Adds test proxy sanitizers.\n\nRecommend to call this API in subclass constructor."
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.afterTest()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.afterTest()"
  name: "afterTest()"
  nameWithType: "ResourceManagerTestProxyTestBase.afterTest()"
  modifiers:
  - "protected"
  overridden: "com.azure.core.test.TestBase.afterTest()"
  syntax: "protected void afterTest()"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.assertResourceIdEquals(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.assertResourceIdEquals(String expected, String actual)"
  name: "assertResourceIdEquals(String expected, String actual)"
  nameWithType: "ResourceManagerTestProxyTestBase.assertResourceIdEquals(String expected, String actual)"
  summary: "Asserts that the resource ID is same."
  modifiers:
  - "protected"
  parameters:
  - description: "the expected resource ID."
    name: "expected"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the actual resource ID."
    name: "actual"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "protected void assertResourceIdEquals(String expected, String actual)"
  desc: "Asserts that the resource ID is same."
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.azureCliSignedInUser()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.azureCliSignedInUser()"
  name: "azureCliSignedInUser()"
  nameWithType: "ResourceManagerTestProxyTestBase.azureCliSignedInUser()"
  summary: "Return current Azure CLI signed-in user's user<wbr>Principal<wbr>Name."
  modifiers:
  - "protected"
  syntax: "protected AzureUser azureCliSignedInUser()"
  desc: "Return current Azure CLI signed-in user's userPrincipalName."
  returns:
    description: "current Azure CLI signed-in user."
    type: "<xref href=\"com.azure.resourcemanager.test.model.AzureUser?alt=com.azure.resourcemanager.test.model.AzureUser&text=AzureUser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.beforeTest()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.beforeTest()"
  name: "beforeTest()"
  nameWithType: "ResourceManagerTestProxyTestBase.beforeTest()"
  modifiers:
  - "protected"
  overridden: "com.azure.core.test.TestBase.beforeTest()"
  syntax: "protected void beforeTest()"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.buildHttpPipeline(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile,com.azure.core.http.policy.HttpLogOptions,java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>,com.azure.core.http.HttpClient)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.buildHttpPipeline(TokenCredential credential, AzureProfile profile, HttpLogOptions httpLogOptions, List<HttpPipelinePolicy> policies, HttpClient httpClient)"
  name: "buildHttpPipeline(TokenCredential credential, AzureProfile profile, HttpLogOptions httpLogOptions, List<HttpPipelinePolicy> policies, HttpClient httpClient)"
  nameWithType: "ResourceManagerTestProxyTestBase.buildHttpPipeline(TokenCredential credential, AzureProfile profile, HttpLogOptions httpLogOptions, List<HttpPipelinePolicy> policies, HttpClient httpClient)"
  summary: "Builds an Http<wbr>Pipeline."
  modifiers:
  - "protected"
  - "abstract"
  parameters:
  - description: "The credentials to use in the pipeline."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "The AzureProfile to use in the pipeline."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  - description: "The HTTP logging options to use in the pipeline."
    name: "httpLogOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional policies to use in the pipeline."
    name: "policies"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The HttpClient to use in the pipeline."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract HttpPipeline buildHttpPipeline(TokenCredential credential, AzureProfile profile, HttpLogOptions httpLogOptions, List<HttpPipelinePolicy> policies, HttpClient httpClient)"
  desc: "Builds an HttpPipeline."
  returns:
    description: "A new constructed HttpPipeline."
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.<T>buildManager(java.lang.Class<T>,com.azure.core.http.HttpPipeline,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.buildManager(Class<T> manager, HttpPipeline httpPipeline, AzureProfile profile)"
  name: "buildManager(Class<T> manager, HttpPipeline httpPipeline, AzureProfile profile)"
  nameWithType: "ResourceManagerTestProxyTestBase.buildManager(Class<T> manager, HttpPipeline httpPipeline, AzureProfile profile)"
  summary: "Builds the manager with provided http pipeline and profile in general manner."
  modifiers:
  - "protected"
  parameters:
  - description: "the class of the manager"
    name: "manager"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the http pipeline"
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the azure profile"
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected T <T>buildManager(Class<T> manager, HttpPipeline httpPipeline, AzureProfile profile)"
  desc: "Builds the manager with provided http pipeline and profile in general manner."
  returns:
    description: "the manager instance"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.cleanUpResources()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.cleanUpResources()"
  name: "cleanUpResources()"
  nameWithType: "ResourceManagerTestProxyTestBase.cleanUpResources()"
  summary: "Cleans up resources."
  modifiers:
  - "protected"
  - "abstract"
  syntax: "protected abstract void cleanUpResources()"
  desc: "Cleans up resources."
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.clientIdFromFile()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.clientIdFromFile()"
  name: "clientIdFromFile()"
  nameWithType: "ResourceManagerTestProxyTestBase.clientIdFromFile()"
  summary: "Loads a client ID from file."
  modifiers:
  - "protected"
  syntax: "protected String clientIdFromFile()"
  desc: "Loads a client ID from file."
  returns:
    description: "A client ID loaded from a file."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.generateHttpClientWithProxy(com.azure.core.http.netty.NettyAsyncHttpClientBuilder,com.azure.core.http.ProxyOptions)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.generateHttpClientWithProxy(NettyAsyncHttpClientBuilder clientBuilder, ProxyOptions proxyOptions)"
  name: "generateHttpClientWithProxy(NettyAsyncHttpClientBuilder clientBuilder, ProxyOptions proxyOptions)"
  nameWithType: "ResourceManagerTestProxyTestBase.generateHttpClientWithProxy(NettyAsyncHttpClientBuilder clientBuilder, ProxyOptions proxyOptions)"
  summary: "Generates an <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> with a proxy."
  modifiers:
  - "protected"
  parameters:
  - description: "The HttpClient builder."
    name: "clientBuilder"
    type: "<xref href=\"com.azure.core.http.netty.NettyAsyncHttpClientBuilder?alt=com.azure.core.http.netty.NettyAsyncHttpClientBuilder&text=NettyAsyncHttpClientBuilder\" data-throw-if-not-resolved=\"False\" />"
  - description: "The proxy."
    name: "proxyOptions"
    type: "<xref href=\"com.azure.core.http.ProxyOptions?alt=com.azure.core.http.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected HttpClient generateHttpClientWithProxy(NettyAsyncHttpClientBuilder clientBuilder, ProxyOptions proxyOptions)"
  desc: "Generates an <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> with a proxy."
  returns:
    description: "An HttpClient with a proxy."
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.generateRandomResourceName(java.lang.String,int)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.generateRandomResourceName(String prefix, int maxLen)"
  name: "generateRandomResourceName(String prefix, int maxLen)"
  nameWithType: "ResourceManagerTestProxyTestBase.generateRandomResourceName(String prefix, int maxLen)"
  summary: "Generates a random resource name."
  modifiers:
  - "protected"
  parameters:
  - description: "Prefix for the resource name."
    name: "prefix"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum length of the resource name."
    name: "maxLen"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String generateRandomResourceName(String prefix, int maxLen)"
  desc: "Generates a random resource name."
  returns:
    description: "A randomly generated resource name with a given prefix and maximum length."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.generateRandomUuid()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.generateRandomUuid()"
  name: "generateRandomUuid()"
  nameWithType: "ResourceManagerTestProxyTestBase.generateRandomUuid()"
  summary: "Generates a random UUID."
  modifiers:
  - "protected"
  syntax: "protected String generateRandomUuid()"
  desc: "Generates a random UUID."
  returns:
    description: "A randomly generated UUID."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.initializeClients(com.azure.core.http.HttpPipeline,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.initializeClients(HttpPipeline httpPipeline, AzureProfile profile)"
  name: "initializeClients(HttpPipeline httpPipeline, AzureProfile profile)"
  nameWithType: "ResourceManagerTestProxyTestBase.initializeClients(HttpPipeline httpPipeline, AzureProfile profile)"
  summary: "Initializes service clients used in testing."
  modifiers:
  - "protected"
  - "abstract"
  parameters:
  - description: "The HttpPipeline to use in the clients."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "The AzureProfile to use in the clients."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract void initializeClients(HttpPipeline httpPipeline, AzureProfile profile)"
  desc: "Initializes service clients used in testing."
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.isPlaybackMode()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.isPlaybackMode()"
  name: "isPlaybackMode()"
  nameWithType: "ResourceManagerTestProxyTestBase.isPlaybackMode()"
  summary: "Checks whether test mode is <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestMode#PLAYBACK\"></xref>."
  modifiers:
  - "protected"
  syntax: "protected boolean isPlaybackMode()"
  desc: "Checks whether test mode is <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestMode#PLAYBACK\"></xref>."
  returns:
    description: "Whether the test mode is <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestMode#PLAYBACK\"></xref>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.password()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.password()"
  name: "password()"
  nameWithType: "ResourceManagerTestProxyTestBase.password()"
  summary: "Generates a random password."
  modifiers:
  - "static"
  syntax: "public static String password()"
  desc: "Generates a random password."
  returns:
    description: "random password"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.profile()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.profile()"
  name: "profile()"
  nameWithType: "ResourceManagerTestProxyTestBase.profile()"
  summary: "Gets the test profile."
  modifiers:
  - "protected"
  syntax: "protected AzureProfile profile()"
  desc: "Gets the test profile."
  returns:
    description: "The test profile."
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.<T>setInternalContext(T,java.lang.Object...)"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.setInternalContext(T internalContext, Object[] objects)"
  name: "setInternalContext(T internalContext, Object[] objects)"
  nameWithType: "ResourceManagerTestProxyTestBase.setInternalContext(T internalContext, Object[] objects)"
  summary: "Sets sdk context when running the tests"
  modifiers:
  - "protected"
  parameters:
  - description: "the internal runtime context"
    name: "internalContext"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the manager classes to change internal context"
    name: "objects"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>[]"
  syntax: "protected void <T>setInternalContext(T internalContext, Object[] objects)"
  desc: "Sets sdk context when running the tests"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.skipInPlayback()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.skipInPlayback()"
  name: "skipInPlayback()"
  nameWithType: "ResourceManagerTestProxyTestBase.skipInPlayback()"
  summary: "Checks whether test should be skipped in playback."
  modifiers:
  - "protected"
  syntax: "protected boolean skipInPlayback()"
  desc: "Checks whether test should be skipped in playback."
  returns:
    description: "Whether the test should be skipped in playback."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.sshPublicKey()"
  fullName: "com.azure.resourcemanager.test.ResourceManagerTestProxyTestBase.sshPublicKey()"
  name: "sshPublicKey()"
  nameWithType: "ResourceManagerTestProxyTestBase.sshPublicKey()"
  summary: "Generates an SSH public key."
  modifiers:
  - "static"
  syntax: "public static String sshPublicKey()"
  desc: "Generates an SSH public key."
  returns:
    description: "an SSH public key"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "class"
desc: "Test base for resource manager SDK.\n\nFor LIVE/RECORD test, dev should 1. Sign-in Azure with CLI (\"az login\"). 2. AZURE\\_TENANT\\_ID environment variable is set. 3. AZURE\\_SUBSCRIPTION\\_ID environment variable is set."
metadata: {}
package: "com.azure.resourcemanager.test"
artifact: com.azure.resourcemanager:azure-resourcemanager-test:2.0.0-beta.1
