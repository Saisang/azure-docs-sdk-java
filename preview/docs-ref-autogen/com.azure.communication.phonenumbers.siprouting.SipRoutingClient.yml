### YamlMime:JavaType
uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient"
fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient"
name: "SipRoutingClient"
nameWithType: "SipRoutingClient"
summary: "Synchronous SIP Routing Client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SipRoutingClient**"
methods:
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteDomain(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteDomain(String domainName)"
  name: "deleteDomain(String domainName)"
  nameWithType: "SipRoutingClient.deleteDomain(String domainName)"
  summary: "Deletes SIP Domain."
  parameters:
  - description: "SIP Domain name."
    name: "domainName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteDomain(String domainName)"
  desc: "Deletes SIP Domain.\n\n**Code Samples**\n\n```java\nsipRoutingClient.deleteDomain(\"<domaon name>\");\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteDomainWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteDomainWithResponse(String domainName, Context context)"
  name: "deleteDomainWithResponse(String domainName, Context context)"
  nameWithType: "SipRoutingClient.deleteDomainWithResponse(String domainName, Context context)"
  summary: "Deletes SIP Domain."
  parameters:
  - description: "SIP Domain nme."
    name: "domainName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context of the request. Can also be null or\n Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteDomainWithResponse(String domainName, Context context)"
  desc: "Deletes SIP Domain.\n\n**Code Samples**\n\n```java\nResponse<Void> response = sipRoutingClient.deleteDomainWithResponse(\"<domain name>\", Context.NONE);\n```"
  returns:
    description: "Response object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteTrunk(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteTrunk(String fqdn)"
  name: "deleteTrunk(String fqdn)"
  nameWithType: "SipRoutingClient.deleteTrunk(String fqdn)"
  summary: "Deletes SIP Trunk."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteTrunk(String fqdn)"
  desc: "Deletes SIP Trunk.\n\n**Code Samples**\n\n```java\nsipRoutingClient.deleteTrunk(\"<trunk fqdn>\");\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteTrunkWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.deleteTrunkWithResponse(String fqdn, Context context)"
  name: "deleteTrunkWithResponse(String fqdn, Context context)"
  nameWithType: "SipRoutingClient.deleteTrunkWithResponse(String fqdn, Context context)"
  summary: "Deletes SIP Trunk."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context of the request. Can also be null or\n Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTrunkWithResponse(String fqdn, Context context)"
  desc: "Deletes SIP Trunk.\n\n**Code Samples**\n\n```java\nResponse<Void> response = sipRoutingClient.deleteTrunkWithResponse(\"<trunk fqdn>\", Context.NONE);\n```"
  returns:
    description: "Response object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getDomain(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getDomain(String domainName)"
  name: "getDomain(String domainName)"
  nameWithType: "SipRoutingClient.getDomain(String domainName)"
  summary: "Gets SIP Domain by domain name."
  parameters:
  - description: "SIP Domain name."
    name: "domainName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SipDomain getDomain(String domainName)"
  desc: "Gets SIP Domain by domain name.\n\n**Code Samples**\n\n```java\nSipDomain domain = sipRoutingClient.getDomain(\"<domain name>\");\n System.out.println(\"Domain \" + domain.isEnabled());\n```"
  returns:
    description: "SIP Domain if exists, null otherwise."
    type: "<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getDomainWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getDomainWithResponse(String domainName, Context context)"
  name: "getDomainWithResponse(String domainName, Context context)"
  nameWithType: "SipRoutingClient.getDomainWithResponse(String domainName, Context context)"
  summary: "Gets SIP Domain by FQDN."
  parameters:
  - description: "SIP Domain name."
    name: "domainName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SipDomain> getDomainWithResponse(String domainName, Context context)"
  desc: "Gets SIP Domain by FQDN.\n\n**Code Samples**\n\n```java\nResponse<SipDomain> response = sipRoutingClient.getDomainWithResponse(\"<domain name>\", Context.NONE);\n SipDomain domain = response.getValue();\n System.out.println(\"Domain \" + domain.isEnabled());\n```"
  returns:
    description: "Response object with the SIP Domain if exists, with null otherwise."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getRoutesForNumber(java.lang.String,java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getRoutesForNumber(String targetPhoneNumber, List<SipTrunkRoute> routes)"
  name: "getRoutesForNumber(String targetPhoneNumber, List<SipTrunkRoute> routes)"
  nameWithType: "SipRoutingClient.getRoutesForNumber(String targetPhoneNumber, List<SipTrunkRoute> routes)"
  summary: "Gets the list of routes matching the target phone number, ordered by priority."
  parameters:
  - description: "Phone number to test routing patterns against."
    name: "targetPhoneNumber"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List of routes to test with targetPhoneNumber."
    name: "routes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public List<SipTrunkRoute> getRoutesForNumber(String targetPhoneNumber, List<SipTrunkRoute> routes)"
  desc: "Gets the list of routes matching the target phone number, ordered by priority."
  returns:
    description: "the list of routes matching the target phone number, ordered by\n priority."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getRoutesForNumberWithResponse(java.lang.String,java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute>,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getRoutesForNumberWithResponse(String targetPhoneNumber, List<SipTrunkRoute> routes, Context context)"
  name: "getRoutesForNumberWithResponse(String targetPhoneNumber, List<SipTrunkRoute> routes, Context context)"
  nameWithType: "SipRoutingClient.getRoutesForNumberWithResponse(String targetPhoneNumber, List<SipTrunkRoute> routes, Context context)"
  summary: "Gets the list of routes matching the target phone number, ordered by priority."
  parameters:
  - description: "Phone number to test routing patterns against."
    name: "targetPhoneNumber"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List of routes to test with targetPhoneNumber."
    name: "routes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<List<SipTrunkRoute>> getRoutesForNumberWithResponse(String targetPhoneNumber, List<SipTrunkRoute> routes, Context context)"
  desc: "Gets the list of routes matching the target phone number, ordered by priority."
  returns:
    description: "the list of routes matching the target phone number, ordered by\n priority along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getTrunk(java.lang.String)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getTrunk(String fqdn)"
  name: "getTrunk(String fqdn)"
  nameWithType: "SipRoutingClient.getTrunk(String fqdn)"
  summary: "Gets SIP Trunk by FQDN."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SipTrunk getTrunk(String fqdn)"
  desc: "Gets SIP Trunk by FQDN.\n\n**Code Samples**\n\n```java\nSipTrunk trunk = sipRoutingClient.getTrunk(\"<trunk fqdn>\");\n System.out.println(\"Trunk \" + trunk.getFqdn() + \":\" + trunk.getSipSignalingPort());\n```"
  returns:
    description: "SIP Trunk if exists, null otherwise."
    type: "<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getTrunkWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.getTrunkWithResponse(String fqdn, Context context)"
  name: "getTrunkWithResponse(String fqdn, Context context)"
  nameWithType: "SipRoutingClient.getTrunkWithResponse(String fqdn, Context context)"
  summary: "Gets SIP Trunk by FQDN."
  parameters:
  - description: "SIP Trunk FQDN."
    name: "fqdn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SipTrunk> getTrunkWithResponse(String fqdn, Context context)"
  desc: "Gets SIP Trunk by FQDN.\n\n**Code Samples**\n\n```java\nResponse<SipTrunk> response = sipRoutingClient.getTrunkWithResponse(\"<trunk fqdn>\", Context.NONE);\n SipTrunk trunk = response.getValue();\n System.out.println(\"Trunk \" + trunk.getFqdn() + \":\" + trunk.getSipSignalingPort());\n```"
  returns:
    description: "Response object with the SIP Trunk if exists, with null otherwise."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listDomains()"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listDomains()"
  name: "listDomains()"
  nameWithType: "SipRoutingClient.listDomains()"
  summary: "Lists SIP Domains."
  syntax: "public PagedIterable<SipDomain> listDomains()"
  desc: "Lists SIP Domains.\n\n**Code Samples**\n\n```java\nPagedIterable<SipDomain> domains = sipRoutingClient.listDomains();\n for (SipDomain domain : domains) {\n     System.out.println(\"Domain \" + domain.isEnabled());\n }\n```"
  returns:
    description: "SIP Domains."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listDomains(com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listDomains(Context context)"
  name: "listDomains(Context context)"
  nameWithType: "SipRoutingClient.listDomains(Context context)"
  summary: "Lists SIP Domains."
  parameters:
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SipDomain> listDomains(Context context)"
  desc: "Lists SIP Domains."
  returns:
    description: "SIP Domains."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listRoutes()"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listRoutes()"
  name: "listRoutes()"
  nameWithType: "SipRoutingClient.listRoutes()"
  summary: "Lists SIP Trunk Routes."
  syntax: "public PagedIterable<SipTrunkRoute> listRoutes()"
  desc: "Lists SIP Trunk Routes.\n\n**Code Samples**\n\n```java\nPagedIterable<SipTrunkRoute> routes = sipRoutingClient.listRoutes();\n for (SipTrunkRoute route : routes) {\n     System.out.println(\"Route name: \" + route.getName());\n     System.out.println(\"Route description: \" + route.getDescription());\n     System.out.println(\"Route number pattern: \" + route.getNumberPattern());\n     System.out.println(\"Route trunks: \" + String.join(\",\", route.getTrunks()));\n }\n```"
  returns:
    description: "SIP Trunk Routes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listRoutes(com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listRoutes(Context context)"
  name: "listRoutes(Context context)"
  nameWithType: "SipRoutingClient.listRoutes(Context context)"
  summary: "Lists SIP Routes."
  parameters:
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SipTrunkRoute> listRoutes(Context context)"
  desc: "Lists SIP Routes."
  returns:
    description: "SIP Routes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listTrunks()"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listTrunks()"
  name: "listTrunks()"
  nameWithType: "SipRoutingClient.listTrunks()"
  summary: "Lists SIP Trunks."
  syntax: "public PagedIterable<SipTrunk> listTrunks()"
  desc: "Lists SIP Trunks.\n\n**Code Samples**\n\n```java\nPagedIterable<SipTrunk> trunks = sipRoutingClient.listTrunks();\n for (SipTrunk trunk : trunks) {\n     System.out.println(\"Trunk \" + trunk.getFqdn() + \":\" + trunk.getSipSignalingPort());\n }\n```"
  returns:
    description: "SIP Trunks."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listTrunks(com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.listTrunks(Context context)"
  name: "listTrunks(Context context)"
  nameWithType: "SipRoutingClient.listTrunks(Context context)"
  summary: "Lists SIP Trunks."
  parameters:
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SipTrunk> listTrunks(Context context)"
  desc: "Lists SIP Trunks."
  returns:
    description: "SIP Trunks."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setDomain(com.azure.communication.phonenumbers.siprouting.models.SipDomain)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setDomain(SipDomain domain)"
  name: "setDomain(SipDomain domain)"
  nameWithType: "SipRoutingClient.setDomain(SipDomain domain)"
  summary: "Sets SIP Domain."
  parameters:
  - description: "SIP Domain."
    name: "domain"
    type: "<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDomain(SipDomain domain)"
  desc: "Sets SIP Domain. If a domain with specified domainName already exists, it will be replaced, otherwise a new Domain will be added.\n\n**Code Samples**\n\n```java\nsipRoutingClient.setDomain(new SipDomain(\"<first trunk fqdn>\", false));\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setDomains(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipDomain>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setDomains(List<SipDomain> domains)"
  name: "setDomains(List<SipDomain> domains)"
  nameWithType: "SipRoutingClient.setDomains(List<SipDomain> domains)"
  summary: "Sets SIP Domains."
  parameters:
  - description: "SIP Domains."
    name: "domains"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setDomains(List<SipDomain> domains)"
  desc: "Sets SIP Domains.\n\n**Code Samples**\n\n```java\nsipRoutingClient.setDomains(asList(\n     new SipDomain(\"<first trunk fqdn>\", false),\n     new SipDomain(\"<first trunk fqdn>\", false)\n ));\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setDomainsWithResponse(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipDomain>,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setDomainsWithResponse(List<SipDomain> domains, Context context)"
  name: "setDomainsWithResponse(List<SipDomain> domains, Context context)"
  nameWithType: "SipRoutingClient.setDomainsWithResponse(List<SipDomain> domains, Context context)"
  summary: "Sets SIP Domains."
  parameters:
  - description: "SIP Domains."
    name: "domains"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipDomain?alt=com.azure.communication.phonenumbers.siprouting.models.SipDomain&text=SipDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the context of the request. Can also be null or\n Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setDomainsWithResponse(List<SipDomain> domains, Context context)"
  desc: "Sets SIP Domains.\n\n**Code Samples**\n\n```java\nResponse<Void> response = sipRoutingClient.setDomainsWithResponse(asList(\n     new SipDomain(\"<first trunk fqdn>\", false),\n     new SipDomain(\"<first trunk fqdn>\", false)\n ), Context.NONE);\n```"
  returns:
    description: "Response object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setRoutes(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setRoutes(List<SipTrunkRoute> routes)"
  name: "setRoutes(List<SipTrunkRoute> routes)"
  nameWithType: "SipRoutingClient.setRoutes(List<SipTrunkRoute> routes)"
  summary: "Sets SIP Trunk Routes."
  parameters:
  - description: "SIP Trunk Routes."
    name: "routes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setRoutes(List<SipTrunkRoute> routes)"
  desc: "Sets SIP Trunk Routes.\n\n**Code Samples**\n\n```java\nsipRoutingClient.setRoutes(asList(\n     new SipTrunkRoute(\"route name1\", \".*9\").setTrunks(asList(\"<first trunk fqdn>\", \"<second trunk fqdn>\")),\n     new SipTrunkRoute(\"route name2\", \".*\").setTrunks(asList(\"<second trunk fqdn>\"))\n ));\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setRoutesWithResponse(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute>,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setRoutesWithResponse(List<SipTrunkRoute> routes, Context context)"
  name: "setRoutesWithResponse(List<SipTrunkRoute> routes, Context context)"
  nameWithType: "SipRoutingClient.setRoutesWithResponse(List<SipTrunkRoute> routes, Context context)"
  summary: "Sets SIP Trunk Routes."
  parameters:
  - description: "SIP Trunk Routes."
    name: "routes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute&text=SipTrunkRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the context of the request. Can also be null or\n Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setRoutesWithResponse(List<SipTrunkRoute> routes, Context context)"
  desc: "Sets SIP Trunk Routes.\n\n**Code Samples**\n\n```java\nResponse<Void> response = sipRoutingClient.setRoutesWithResponse(asList(\n     new SipTrunkRoute(\"route name1\", \".*9\").setTrunks(asList(\"<first trunk fqdn>\", \"<second trunk fqdn>\")),\n     new SipTrunkRoute(\"route name2\", \".*\").setTrunks(asList(\"<second trunk fqdn>\"))\n ), Context.NONE);\n```"
  returns:
    description: "Response object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setTrunk(com.azure.communication.phonenumbers.siprouting.models.SipTrunk)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setTrunk(SipTrunk trunk)"
  name: "setTrunk(SipTrunk trunk)"
  nameWithType: "SipRoutingClient.setTrunk(SipTrunk trunk)"
  summary: "Sets SIP Trunk."
  parameters:
  - description: "SIP Trunk."
    name: "trunk"
    type: "<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setTrunk(SipTrunk trunk)"
  desc: "Sets SIP Trunk. If a trunk with specified FQDN already exists, it will be replaced, otherwise a new trunk will be added.\n\n**Code Samples**\n\n```java\nsipRoutingClient.setTrunk(new SipTrunk(\"<trunk fqdn>\", 12345));\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setTrunks(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunk>)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setTrunks(List<SipTrunk> trunks)"
  name: "setTrunks(List<SipTrunk> trunks)"
  nameWithType: "SipRoutingClient.setTrunks(List<SipTrunk> trunks)"
  summary: "Sets SIP Trunks."
  parameters:
  - description: "SIP Trunks."
    name: "trunks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setTrunks(List<SipTrunk> trunks)"
  desc: "Sets SIP Trunks.\n\n**Code Samples**\n\n```java\nsipRoutingClient.setTrunks(asList(\n     new SipTrunk(\"<first trunk fqdn>\", 12345),\n     new SipTrunk(\"<second trunk fqdn>\", 23456)\n ));\n```"
- uid: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setTrunksWithResponse(java.util.List<com.azure.communication.phonenumbers.siprouting.models.SipTrunk>,com.azure.core.util.Context)"
  fullName: "com.azure.communication.phonenumbers.siprouting.SipRoutingClient.setTrunksWithResponse(List<SipTrunk> trunks, Context context)"
  name: "setTrunksWithResponse(List<SipTrunk> trunks, Context context)"
  nameWithType: "SipRoutingClient.setTrunksWithResponse(List<SipTrunk> trunks, Context context)"
  summary: "Sets SIP Trunks."
  parameters:
  - description: "SIP Trunks."
    name: "trunks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk?alt=com.azure.communication.phonenumbers.siprouting.models.SipTrunk&text=SipTrunk\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the context of the request. Can also be null or\n Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setTrunksWithResponse(List<SipTrunk> trunks, Context context)"
  desc: "Sets SIP Trunks.\n\n**Code Samples**\n\n```java\nResponse<Void> response = sipRoutingClient.setTrunksWithResponse(asList(\n     new SipTrunk(\"<first trunk fqdn>\", 12345),\n     new SipTrunk(\"<second trunk fqdn>\", 23456)\n ), Context.NONE);\n```"
  returns:
    description: "Response object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
type: "class"
desc: "Synchronous SIP Routing Client. This client contains all the operations for <xref uid=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunk\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SipTrunk\"></xref> and <xref uid=\"com.azure.communication.phonenumbers.siprouting.models.SipTrunkRoute\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SipTrunkRoute\"></xref>.\n\n**Instantiating a synchronous SIP Routing Client using connection string**\n\n```java\nSipRoutingClient sipRoutingClient = new SipRoutingClientBuilder()\n     .connectionString(connectionString)\n     .buildClient();\n```"
metadata: {}
package: "com.azure.communication.phonenumbers.siprouting"
artifact: com.azure:azure-communication-phonenumbers:1.4.0-beta.2
