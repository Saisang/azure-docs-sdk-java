### YamlMime:JavaType
uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload"
fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload"
name: "ResourceProvisionPayload"
nameWithType: "ResourceProvisionPayload"
summary: "Resource creation data model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ResourceProvisionPayload**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.ResourceProvisionPayload()"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.ResourceProvisionPayload()"
  name: "ResourceProvisionPayload()"
  nameWithType: "ResourceProvisionPayload.ResourceProvisionPayload()"
  summary: "Creates an instance of Resource<wbr>Provision<wbr>Payload class."
  syntax: "public ResourceProvisionPayload()"
  desc: "Creates an instance of ResourceProvisionPayload class."
methods:
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.baseProfile()"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.baseProfile()"
  name: "baseProfile()"
  nameWithType: "ResourceProvisionPayload.baseProfile()"
  summary: "Get the base<wbr>Profile property: JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vm<wbr>Size, then include vm<wbr>Size in base<wbr>Profile)."
  syntax: "public Map<String,BinaryData> baseProfile()"
  desc: "Get the baseProfile property: JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vmSize, then include vmSize in baseProfile)."
  returns:
    description: "the baseProfile value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ResourceProvisionPayload.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Resource<wbr>Provision<wbr>Payload from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ResourceProvisionPayload fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ResourceProvisionPayload from the JsonReader."
  returns:
    description: "An instance of ResourceProvisionPayload if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.resourceCount()"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.resourceCount()"
  name: "resourceCount()"
  nameWithType: "ResourceProvisionPayload.resourceCount()"
  summary: "Get the resource<wbr>Count property: Number of VMs to be created."
  syntax: "public int resourceCount()"
  desc: "Get the resourceCount property: Number of VMs to be created."
  returns:
    description: "the resourceCount value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.resourceOverrides()"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.resourceOverrides()"
  name: "resourceOverrides()"
  nameWithType: "ResourceProvisionPayload.resourceOverrides()"
  summary: "Get the resource<wbr>Overrides property: JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computer<wbr>Name property, you pass computer<wbr>Names for each VM in batch in this array), service will merge base<wbr>Profile with VM specific overrides and create a merged VMProfile."
  syntax: "public List<Map<String,BinaryData>> resourceOverrides()"
  desc: "Get the resourceOverrides property: JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computerName property, you pass computerNames for each VM in batch in this array), service will merge baseProfile with VM specific overrides and create a merged VMProfile."
  returns:
    description: "the resourceOverrides value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.resourcePrefix()"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.resourcePrefix()"
  name: "resourcePrefix()"
  nameWithType: "ResourceProvisionPayload.resourcePrefix()"
  summary: "Get the resource<wbr>Prefix property: if resource<wbr>Overrides doesn't contain \"name\", service will create name based of prefix and Resource<wbr>Count e.<wbr>g."
  syntax: "public String resourcePrefix()"
  desc: "Get the resourcePrefix property: if resourceOverrides doesn't contain \"name\", service will create name based of prefix and ResourceCount e.g. resourceprefix-0,resourceprefix-1.."
  returns:
    description: "the resourcePrefix value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ResourceProvisionPayload.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.validate()"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.validate()"
  name: "validate()"
  nameWithType: "ResourceProvisionPayload.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withBaseProfile(java.util.Map<java.lang.String,com.azure.core.util.BinaryData>)"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withBaseProfile(Map<String,BinaryData> baseProfile)"
  name: "withBaseProfile(Map<String,BinaryData> baseProfile)"
  nameWithType: "ResourceProvisionPayload.withBaseProfile(Map<String,BinaryData> baseProfile)"
  summary: "Set the base<wbr>Profile property: JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vm<wbr>Size, then include vm<wbr>Size in base<wbr>Profile)."
  parameters:
  - description: "the baseProfile value to set."
    name: "baseProfile"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResourceProvisionPayload withBaseProfile(Map<String,BinaryData> baseProfile)"
  desc: "Set the baseProfile property: JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vmSize, then include vmSize in baseProfile)."
  returns:
    description: "the ResourceProvisionPayload object itself."
    type: "<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withResourceCount(int)"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withResourceCount(int resourceCount)"
  name: "withResourceCount(int resourceCount)"
  nameWithType: "ResourceProvisionPayload.withResourceCount(int resourceCount)"
  summary: "Set the resource<wbr>Count property: Number of VMs to be created."
  parameters:
  - description: "the resourceCount value to set."
    name: "resourceCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceProvisionPayload withResourceCount(int resourceCount)"
  desc: "Set the resourceCount property: Number of VMs to be created."
  returns:
    description: "the ResourceProvisionPayload object itself."
    type: "<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withResourceOverrides(java.util.List<java.util.Map<java.lang.String,com.azure.core.util.BinaryData>>)"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withResourceOverrides(List<Map<String,BinaryData>> resourceOverrides)"
  name: "withResourceOverrides(List<Map<String,BinaryData>> resourceOverrides)"
  nameWithType: "ResourceProvisionPayload.withResourceOverrides(List<Map<String,BinaryData>> resourceOverrides)"
  summary: "Set the resource<wbr>Overrides property: JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computer<wbr>Name property, you pass computer<wbr>Names for each VM in batch in this array), service will merge base<wbr>Profile with VM specific overrides and create a merged VMProfile."
  parameters:
  - description: "the resourceOverrides value to set."
    name: "resourceOverrides"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public ResourceProvisionPayload withResourceOverrides(List<Map<String,BinaryData>> resourceOverrides)"
  desc: "Set the resourceOverrides property: JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computerName property, you pass computerNames for each VM in batch in this array), service will merge baseProfile with VM specific overrides and create a merged VMProfile."
  returns:
    description: "the ResourceProvisionPayload object itself."
    type: "<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withResourcePrefix(java.lang.String)"
  fullName: "com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload.withResourcePrefix(String resourcePrefix)"
  name: "withResourcePrefix(String resourcePrefix)"
  nameWithType: "ResourceProvisionPayload.withResourcePrefix(String resourcePrefix)"
  summary: "Set the resource<wbr>Prefix property: if resource<wbr>Overrides doesn't contain \"name\", service will create name based of prefix and Resource<wbr>Count e.<wbr>g."
  parameters:
  - description: "the resourcePrefix value to set."
    name: "resourcePrefix"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ResourceProvisionPayload withResourcePrefix(String resourcePrefix)"
  desc: "Set the resourcePrefix property: if resourceOverrides doesn't contain \"name\", service will create name based of prefix and ResourceCount e.g. resourceprefix-0,resourceprefix-1.."
  returns:
    description: "the ResourceProvisionPayload object itself."
    type: "<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Resource creation data model."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload?alt=com.azure.resourcemanager.computeschedule.models.ResourceProvisionPayload&text=ResourceProvisionPayload\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.computeschedule.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-computeschedule:1.2.0-beta.1
